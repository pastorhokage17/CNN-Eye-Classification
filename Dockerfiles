#-------------------------#
# MAPUA UNIVERSITY 
# CNN-Eye-Classification 
# 03/31/2022
#-------------------------#
# Image name: crus012/cnneye-opencv-build:r32.6.1-tf1.15-py3
#-------------------------#

FROM nvcr.io/nvidia/l4t-tensorflow:r32.6.1-tf1.15-py3
ARG DEBIAN_FRONTEND=noninteractive
ARG PREFIX="/usr/local"
ARG BUILD_TMP="/tmp/build_opencv"
ARG CMAKEFLAGS="\
        -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs\
        -D BUILD_EXAMPLES=OFF\
        -D BUILD_opencv_python2=ON\
        -D BUILD_opencv_python3=ON\
        -D CMAKE_BUILD_TYPE=RELEASE\
        -D CMAKE_INSTALL_PREFIX=${PREFIX}\
        -D CUDA_ARCH_BIN=5.3,6.2,7.2\
        -D CUDA_ARCH_PTX=\
        -D CUDA_FAST_MATH=ON\
        -D EIGEN_INCLUDE_PATH=/usr/include/eigen3 \
        -D ENABLE_NEON=ON\
        -D OPENCV_ENABLE_NONFREE=ON\
        -D OPENCV_EXTRA_MODULES_PATH=/tmp/build_opencv/opencv_contrib/modules\
        -D OPENCV_GENERATE_PKGCONFIG=ON\
        -D WITH_CUBLAS=ON\
        -D WITH_CUDA=ON\
        -D WITH_CUDNN=ON\
        -D CUDNN_VERSION='8.0'\
        -D OPENCV_DNN_CUDA=ON\
        -D WITH_GSTREAMER=ON\
        -D WITH_LIBV4L=ON\
        -D WITH_OPENGL=ON"

RUN mkdir -p ${PREFIX}
WORKDIR ${PREFIX}

RUN apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates

#install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
        gosu \
        cuda-compiler-10-2 \
        cuda-minimal-build-10-2 \
        cuda-libraries-dev-10-2 \
        libcudnn8-dev \
        build-essential \
        cmake \
        git \
        gfortran \
        libatlas-base-dev \
        libavcodec-dev \
        libavformat-dev \
        libavresample-dev \
        libeigen3-dev \
        libgstreamer-plugins-base1.0-dev \
        libgstreamer-plugins-good1.0-dev \
        libgstreamer1.0-dev \
        libjpeg-dev \
        libjpeg8-dev \
        libjpeg-turbo8-dev \
        liblapack-dev \
        liblapacke-dev \
        libopenblas-dev \
        libpng-dev \
        libpostproc-dev \
        libswscale-dev \
        libtbb-dev \
        libtbb2 \
        libtesseract-dev \
        libtiff-dev \
        libv4l-dev \
        libx264-dev \
        pkg-config \
        python3-dev \
        python3-numpy \
        python3-pil \
        python3-matplotlib \
        v4l-utils \
        zlib1g-dev

#build opencv
RUN adduser --system --group --no-create-home builder && \
    mkdir ${BUILD_TMP} && cd ${BUILD_TMP} &&\
    gosu builder git clone --depth 1 --branch 4.5.1 https://github.com/opencv/opencv.git &&\
    gosu builder git clone --depth 1 --branch 4.5.1 https://github.com/opencv/opencv_contrib.git &&\
    cd opencv &&\
    mkdir build && chown builder:builder build &&\
    cd build &&\
    gosu builder cmake ${CMAKEFLAGS} .. &&\
    gosu builder make -j1 &&\
    make install

CMD ["bin/bash"]
